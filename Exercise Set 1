#R Exercise Set 1

#Exercise 1.2.5

#1
View(penguins)

#There are 344 rows and 8 columns in the penguins dataset

#2
?penguins

#The variable bill_depth_mm describes each penguin's bill depth in millimeters

#3
ggplot(penguins, aes(x=bill_length_mm, y=bill_depth_mm)) + geom_point() + labs(x="Bill Length (mm)", y="Bill Depth (mm)")

#According to the scatterplot, there seems to be a positive but weak relationship between bill length and bill depth

#4
ggplot(penguins, aes(x=bill_depth_mm, y=species)) + geom_point() + labs(x="Bill Depth (mm)", y="Species")

#A scatterplot of species vs. bill depth puts all the data points of one species on the same line, a better geom would be a boxplot (code below)

ggplot(penguins, aes(x=species, y=bill_depth_mm)) + geom_boxplot() + labs(x="Species", y="Bill Depth (mm)")

#5
ggplot(data=penguins) + geom_point()

#This code would give an error message because the variables on the x-axis and y-axis have not yet been specified. To fix this, the code needs to list the variables that are being related to one another (code example below)

ggplot(data=penguins, aes(x=bill_length_mm, y=bill_depth_mm)) + geom_point()

#6
#This argument removes the missing values. The default of this is false and
#doesn't remove the missing.

ggplot(data=penguins,
       aes(x=species,y=bill_length_mm))+
  geom_point(na.rm=TRUE)

#7
ggplot(data=penguins,
       aes(x=species,y=bill_length_mm))+
  geom_point(na.rm=TRUE) +
  labs(caption = "Data come from the palmerpenguins package")

#8
#It should be mapped to the geom_level because the global level gives a warning.
ggplot(data=penguins,
       mapping = aes(x = flipper_length_mm,
                     y = body_mass_g)) + 
  geom_point(aes(colour = bill_depth_mm),
             na.rm = TRUE) +
  geom_smooth(na.rm = TRUE)

#9
#The Chart will show flipper length on x-axis and y-axis. The dots will be
#the color of the islands.

#10
#These graphs will be the same because the aes() function can work with the 
#geom() function. The second is the same code but with the information within the functions

#Exercise 1.4.3

#1
ggplot(penguins, aes(y = fct_infreq(species))) + geom_bar()
#Basically, we got species on the y-axis (vertical) and put them in order where we see that Adelie species are the highest in numbers. 

#2
ggplot(penguins, aes(x = species)) + geom_bar(color = "red")

ggplot(penguins, aes(x = species)) + geom_bar(fill = "red")
#The first code with color gives red color to the borders (outlines) of the bar and the second one with “fill” fills the columns with red color. While we want to draw attention to the variable’s distribution and highlight the bars’ general color, we use fill and if we want to draw attention to the bar boundaries and make distinctions between individual bars we use color. From our perspective, the most used one is the filled bar option which allows us to visually compare the heights of the bars without distraction from borders.

#3
#It is used to specify the number of bins.

#4
ggplot(diamonds, aes(x = carat)) + geom_histogram(binwidth = 10)
ggplot(diamonds, aes(x = carat)) + geom_histogram(binwidth = 1)
ggplot(diamonds, aes(x = carat)) + geom_histogram(binwidth = 0.25)
ggplot(diamonds, aes(x = carat)) + geom_histogram(binwidth = 0.1)
ggplot(diamonds, aes(x = carat)) + geom_histogram(binwidth = 0.05)
#From our perspective, the most reasonable ones are the bandwidths of 0.25 and 0.1.

#Exersise 1.5.5

#1.5.5.1
?mpg
There are 6 categorical variables:

1. manufacturer
manufacturer name
2. model
model name
3.trans
 type of transmission 
4.drv
the type of drive train;
where  f = front-wheel drive, r = rear wheel drive, 4 = 4wde
5. fl
fuel type
6. Class
"type" of car

##1.5.5.2

> ggplot(
+     data = mpg,
+     mapping = aes(x = hwy, y = displ)
+ ) +
+     geom_point()

ggplot(data = mpg, mapping = aes(x = hwy, y = displ)) + geom_point(aes(color = year))
- There seems to be non-linear relationship when adding 'year' as the third numerical variable to the scatterplot of hwy vs. displ

ggplot(data = mpg, mapping = aes(x = hwy, y = displ)) + geom_point(aes(size = cyl))
- When adding 'cyl' - the number of cylinder of a car - there is an apparent linear relationship, where as the number of cylinder increases-
  the engine displacement increases and the highway per mileage decreases

> ggplot(data = mpg, mapping = aes(x = hwy, y = displ)) + geom_point(aes(color = year)) + geom_point(aes(size = cyl))
- When mapping 'year' as color and  'cyl' as size, there appears to be a relationship that cars with more number of cylinders and 
less highway per mileage are made in the earlier years of 2000

> ggplot(data = mpg, mapping = aes(x = hwy, y = displ)) + geom_point(aes(color = year)) + geom_point(aes(size = cyl)) + geom_path(aes(shape = manufacturer))
- When modeling 'manufacturer', a catergorical variable, with shape, it displayed "Ignoring unknown aesthetics: shape" because "The shape palette can deal 
with a maximum of 6 discrete values because more than 6 becomes difficult to discriminate; you have 15. Consider specifying shapes manually if you must have them.
- However,  we tried adding a numerical variable 'cty' -city mileage- to the shape aesthetic and found out that a continuous variable cannot be mapped to the shape aesthetic

> ggplot(data = mpg, mapping = aes(x = hwy, y = displ)) + geom_point(aes(color = year)) + geom_point(aes(size = cyl)) + geom_path(aes(shape = class))
- When adding a categorical varible, 'class', to model for shape, it still generates an 'Ignoring unknown aesthetics: shape' because "The shape palette can deal 
with a maximum of 6 discrete values because more than 6 becomes difficult to discriminate; you have 7. Consider specifying shapes manually if you must have them." 

#1.5.5.3
> ggplot(mpg, aes(x = hwy, y = displ, linewidth = cty))
- Nothing happens when mapping a third variable to linewidth in the scatterplot of hwy vs. displ

#1.5.5.4
> ggplot(mpg, aes(x = hwy, y = displ, linewidth = cty)) +
+     geom_line(aes(size = cty)) 
- when adding size aesthetic to it, a graph is generated, which shows engine displacement decreasing as city mile per hour increases

#1.5.5.5
> ggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm, color = species)) + geom_point()
- The  "Adelie" species have relatively more depth and less length while the "Gentoo" species have relatively more length and less depth. 
On the other hand, the relationship between length and depth is more linear for the "Chinstrap" species 

 ggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm, color = species)) + geom_point() + facet_wrap(~species)
- Faceting by species reveals the linear relationship between lenght and depth in all the three species while also supporting
the previous observation that "Adelie" species have more depth and that "Gentoo" species have more length 

#1.5.5.6
Answer: it yielded two separate legends because it should have been specifically mapped within the geom_point function.
Here is how to correct the code that will generate combined legends 
> ggplot(
+     data = penguins,
+     mapping = aes(x = bill_length_mm, y = bill_depth_mm)
+ ) +
+     geom_point(mapping = aes(color = species, shape = species))

#Exercise 1.6.1
#1
#The second one since it has the ggsave with the code, as it saves the plot. 

#2
#Change png to pdg in ggsave. 
