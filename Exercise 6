#10.4.1
#1 In the histogram the command excludes the missing values and at the end it adds the # of removed missing data points. This means that missing values do not contribute to the histogram's bin counts or its graphical representation. On the other hand, in the bar chart, they are presented separate category. The difference is the histogram excludes the missing values, since it needs numerical values to include in the bins and the bar-chart makes a separate category.  
#2 This function decides how the missing values are handled during the calculations. It ignores all the missing values before the calculation of mean and sum.
#3 
nycflights13::flights |> 
  mutate(
    cancelled = is.na(dep_time),
    sched_hour = sched_dep_time %/% 100,
    sched_min = sched_dep_time %% 100,
    sched_dep_time = sched_hour + (sched_min / 60)
  ) %>%
  ggplot(aes(x = sched_dep_time)) +
  geom_freqpoly(aes(color = cancelled), binwidth = 1/4) +
  facet_wrap(~cancelled, scales = "free_y") +
  labs(
    title = "Frequency of Scheduled Departure Times",
    x = "Scheduled Departure Time (Hours)",
    y = "Number of Flights"
  ) +
  scale_color_manual(values = c("TRUE" = "red", "FALSE" = "blue"),
                     labels = c("TRUE" = "Cancelled", "FALSE" = "Not Cancelled")) +
  theme_minimal()

#11.2.1
#1 ggplot(data = mpg, mapping = aes(x = fct_reorder(class, hwy), y = hwy, fill = class)) +
  geom_boxplot() +
  coord_flip() +
  scale_fill_manual(values = c("compact" = "#1b9e77", "midsize" = "#d95f02", "suv" = "#7570b3", 
                               "2seater" = "#e7298a", "minivan" = "#66a61e", "pickup" = "#e6ab02", 
                               "subcompact" = "#a6761d")) + # Adjust these colors and classes as needed
  labs(
    title = "Engine Displacement vs. Highway Mileage",
    subtitle = "Comparing the median highway mpg in each class",
    caption = "Data from fueleconomy.gov",
    x = "Car Class",
    y = "Highway Miles per Gallon"
  ) +
  theme_minimal()
#2 ggplot(mpg, aes(x = cty, y = hwy, color = drv, shape = drv)) +
  geom_point() +
  scale_color_manual(values = c("4" = "red", "f" = "green", "r" = "blue")) +
  scale_shape_manual(values = c("4" = 16, "f" = 17, "r" = 15)) +
  theme_minimal() +
  labs(
    title = "Highway vs. City Fuel Efficiency",
    subtitle = "Colored and Shaped by Type of Drive Train",
    x = "City MPG",
    y = "Highway MPG",
    color = "Type of Drive Train",
    shape = "Type of Drive Train"
  ) +
  theme(legend.position = "right")







#11.3.1
#1.
label <- tribble(
  ~displ, ~hwy, ~label, ~vjust, ~hjust,
  Inf, Inf, "Top right", "top", "right",
  Inf, -Inf, "Bottom right", "bottom", "right",
  -Inf, Inf, "Top left", "top", "left",
  -Inf, -Inf, "Bottom left", "bottom", "left"
)

ggplot(mpg, aes(displ, hwy)) +
  geom_point() +
  geom_text(aes(label = label, vjust = vjust, hjust = hjust), data = label)

#2.
ggplot(mpg, aes(displ, hwy)) +
  geom_point() +
  annotate("text",
    x = Inf, y = Inf,
    label = "There is a potential correlation between engine size and decreasing fuel economy.", vjust = "top", hjust = "right", color = "blue", size = 5
  )
#3. If the facet variable is not specified, then the text is just drawn in all facets. 
#To draw the label in only one facet, you need to add a column to the label data frame with the value of the variable(s) facetting.
#To put a different label in each facet, you would need to include a variable in your dataset that corresponds to the labels you want to display. Then, you can use that variable in the aes() function within geom_text(). 
#4.
#label.padding is the padding around label
#label.r is the amount of rounding in the corners
#label.size is the size of label border
#5. 
#The four arguments are (from the help for arrow()):
#angle decides the angle of arrow head
#length is for the length of the arrow head
#ends ends the line and then draw arrow head
#type: "open" or "close" commands whether the arrow head is a closed or open triangle
